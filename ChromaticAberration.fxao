//@Begin_vertex
#ifdef GL_ES
    precision mediump float;
#endif

attribute vec4 position;
attribute vec2 texCoord;

varying vec2 frag_texCoord;

uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

void main() {
    frag_texCoord = texCoord;
    gl_Position = projectionMatrix * transformMatrix * position;
}
//@End

//@Begin_fragment
// 19/08/2023: Rewrote code and added intensity

#ifdef GL_ES
    precision mediump float;
#endif

varying vec2 frag_texCoord;

uniform sampler2D imgTexture;
uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

uniform float amountX;
uniform float amountY;
uniform float intensity;

void main() {
    vec2 amount = vec2(amountX, amountY);

    vec4 color = texture2D(imgTexture, frag_texCoord);
    color.r = mix(color.r, texture2D(imgTexture, frag_texCoord + amount).r, intensity);
    color.b = mix(color.b, texture2D(imgTexture, frag_texCoord - amount).b, intensity);

    gl_FragColor = color * blendColor;
}
//@End