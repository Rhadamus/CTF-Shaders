//@Begin_vertex
#ifdef GL_ES
    precision mediump float;
#endif

attribute vec4 position;
attribute vec2 texCoord;

varying vec2 frag_texCoord;

uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

void main() {
    frag_texCoord = texCoord;
    gl_Position = projectionMatrix * transformMatrix * position;
}
//@End

//@Begin_fragment
#ifdef GL_ES
    precision mediump float;
#endif

varying vec2 frag_texCoord;

uniform sampler2D imgTexture;
uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

uniform float amountX;
uniform float amountY;

void main() {
    float red = texture2D(imgTexture, vec2(frag_texCoord.x + amountX, frag_texCoord.y + amountY)).r;
    float green = texture2D(imgTexture, frag_texCoord).g;
    float blue = texture2D(imgTexture, vec2(frag_texCoord.x - amountX, frag_texCoord.y - amountY)).b;
    float alpha = texture2D(imgTexture, frag_texCoord).a;

    gl_FragColor = vec4(red, green, blue, alpha) * blendColor;
}
//@End