//@Begin_vertex
#ifdef GL_ES
    precision mediump float;
#endif

attribute vec4 position;
attribute vec2 texCoord;

varying vec2 frag_texCoord;

uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

void main() {
    frag_texCoord = texCoord;
    gl_Position = projectionMatrix * transformMatrix * position;
}
//@End

//@Begin_fragment
#ifdef GL_ES
    precision mediump float;
#endif

varying vec2 frag_texCoord;

uniform sampler2D imgTexture;
uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

uniform float freq;
uniform float amplitude;
uniform float offset;
uniform float period;

#define PI 3.14159265

void main() {
    vec2 tempCoords = frag_texCoord;
    float offsetX = sin((frag_texCoord.y + offset) * freq) * amplitude;

    highp float intlv = sin(frag_texCoord.y * (1.0 - period) * fPixelHeight * PI);

    if (intlv >= 0.0) {
        tempCoords.x += offsetX;
    }
    else {
        tempCoords.x -= offsetX;
    }

    gl_FragColor = texture2D(imgTexture, tempCoords) * blendColor;
}
//@End